package ps230926;

/**
 * 시작시간: 14:05
 * 종료시간:
 * 
 * 
 * 문제 해석
 * 미로는 직사각형, 미로를 탈출해야함
 * 	빈칸: 이동가능 .
 * 	벽: 이동 불가 #
 * 	열쇠: 이동가능, 처음 들어가면 열쇠를 집음 a,b,c,d,e,f
 * 	문: 대응하는 열쇠가 있을때만 이동 A,B,C,D,E,F
 * 	현재 위치: 빈곳 0
 * 	출구: 미로탈출 1
 * 
 * 미로를 탈출하는데 걸리는 이동 횟수의 최솟값
 * 
 * 입력
 * 첫째줄: N,M
 * N개줄: 미로 모양
 * 같은 타입의 열쇠가 여러개 있을 수도 있음, 문도 가능
 * 문에 대응하는 열쇠가 없을 수도 있음
 * 출구도 여러개 가능
 * 
 * 출력
 * 미로를 탈출하는데 드는 이동 횟수의 최솟값
 * 탈출 불가면 -1출력
 * 
 * 
 * 문제해결 프로세스 (최단거리니까 BFS..?)
 * 1. BFS로 열쇠 찾아다니면서 맵 넓히기
 * 	1-1. 맵 다닐 수 있는곳 전부 넓혔는데 1없으면 탈출불가 -> -1
 * 	1-2. 	1 있으면 최단거리 탐색
 * 
 * 
 * 
 * 제한조건
 * N,M<=50
 * 
 * 
 * 시간복잡도
 * 
 * 
 * 
 */

public class Main_BJ_1194_달이차오른다가자_이현영 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
